// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.BaseDefine.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ServiceID

/** service id */
typedef GPB_ENUM(ServiceID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ServiceID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ServiceID_SidUnused = 0,

  /** for login */
  ServiceID_SidLogin = 1,

  /** for IM */
  ServiceID_SidMsg = 3,

  /** for GAME */
  ServiceID_SidGame = 4,

  /** for 语音 */
  ServiceID_SidAudio = 5,

  /** for 其他 */
  ServiceID_SidOther = 257,
};

GPBEnumDescriptor *ServiceID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ServiceID_IsValidValue(int32_t value);

#pragma mark - Enum LoginCmdID

/** command */
typedef GPB_ENUM(LoginCmdID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LoginCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LoginCmdID_CidLoginUnused = 0,

  /** 登陆 */
  LoginCmdID_CidLoginReqUserlogin = 259,
  LoginCmdID_CidLoginResUserlogin = 260,

  /** 登出 */
  LoginCmdID_CidLoginReqUserlogout = 261,
  LoginCmdID_CidLoginResUserlogout = 262,
};

GPBEnumDescriptor *LoginCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LoginCmdID_IsValidValue(int32_t value);

#pragma mark - Enum MessageCmdID

/** command */
typedef GPB_ENUM(MessageCmdID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MessageCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MessageCmdID_CidMsgUnused = 0,
  MessageCmdID_CidMsgData = 769,
  MessageCmdID_CidMsgDataAck = 770,
};

GPBEnumDescriptor *MessageCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageCmdID_IsValidValue(int32_t value);

#pragma mark - Enum GameCmdID

/** command */
typedef GPB_ENUM(GameCmdID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GameCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GameCmdID_CidGobangUnused = 0,

  /** 五子棋 */
  GameCmdID_CidGobangData = 1,

  /** 五子棋 */
  GameCmdID_CidGobangAck = 2,
};

GPBEnumDescriptor *GameCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GameCmdID_IsValidValue(int32_t value);

#pragma mark - Enum AudioCmdID

/** command */
typedef GPB_ENUM(AudioCmdID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AudioCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AudioCmdID_CidAudioUnused = 0,

  /** 语音 */
  AudioCmdID_CidAudioData = 1,

  /** 语音 */
  AudioCmdID_CidAudioAck = 2,
};

GPBEnumDescriptor *AudioCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AudioCmdID_IsValidValue(int32_t value);

#pragma mark - Enum OtherCmdID

typedef GPB_ENUM(OtherCmdID) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OtherCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OtherCmdID_CidOtherUnused = 0,
  OtherCmdID_CidOtherHeartbeat = 1793,
  OtherCmdID_CidOtherStopRecvPacket = 1794,
};

GPBEnumDescriptor *OtherCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OtherCmdID_IsValidValue(int32_t value);

#pragma mark - Enum ResultType

typedef GPB_ENUM(ResultType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResultType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResultType_Ok = 0,
  ResultType_Refused = 1,
};

GPBEnumDescriptor *ResultType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResultType_IsValidValue(int32_t value);

#pragma mark - Enum ClientType

typedef GPB_ENUM(ClientType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClientType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClientType_ClientTypeUnknown = 0,
  ClientType_ClientTypeAndroid = 1,
  ClientType_ClientTypeIos = 2,
  ClientType_ClientTypeWindows = 3,
  ClientType_ClientTypeMac = 4,
  ClientType_ClientTypeWebim = 5,
};

GPBEnumDescriptor *ClientType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientType_IsValidValue(int32_t value);

#pragma mark - ImBaseDefineRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ImBaseDefineRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
